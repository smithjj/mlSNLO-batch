2D-cav-LP is similar to PW-cav-LP except it handles the full spatial profiles so it can realistically model beams with Gaussian or Supergaussian transverse profiles.  It includes diffraction, birefringent walkoff, displaced beams, etc. for pulsed or cw light. The light is assumed to be monochromatic and the pulses are assumed to be long enough that group velocity effects are unimportant.  The temporal shape of the pulse can be altered by including the super Gaussian index as an optional second argument in the duration box, separating the two arguments with a space; this second argument should be an integer 1-10, where a value of 1 is the typical Gaussian shape, and values >2 are super Gaussian which increasingly resemble tophat profile with larger values. For help in setting input values, right-click on the input edit box. Help text appears in the lower text box.

Modeling methods are described in detail in papers "Phase distortions in sum- and difference-frequency mixing in crystals" JOSA B vol. 12 p. 49 (1995), and "Comparison of a numerical model with measured performance of a seeded, nanosecond KTP optical parametric oscillator," JOSA B vol. 12 p. 2253 (1995). These papers are available online at http://www.as-photonics.com/Publications.html

Before running this model, I suggest you use the much faster PW-cav-LP first to find reasonable values for the input parameters. The function Cavity will help you design a cavity with curved mirrors. The Guoy or focus phase shift is given by the Cavity function. You should compensate this by making the round trip phase of the cavity the same magnitude but opposite in sign. For example, if the red1 wave is resonated and its phase shift calculated by the Cavity function is 1.3 radians, you could make the phase shift in the Phase L-C box in the red1 column -1.3 radians. You can check this by making sure this phase shift gives the best red1 resonance, or energy transmission by the cavity, for when the gain is set to zero (d_eff=0). If you don't use the correct phase the red1 resonance frequency will be shifted, as you can see by looking at the red1 spectrum after the run (with gain turned on) is complete. For an OPO that resonates only the red1 wave the main effect of an improper shift is that the seed light will not be resonant with the cavity, weakening the seeding.

For modeling cw cases, the run-time display will include a '%change' value.  When this is acceptably small, say 1E-3, click the 'Stop' button to end the run and display the results.  For modeling pulsed cases, the run will automatically terminate at the end of the pulses. Note that running cw cases with very low cavity loss can take a long time because of the large number of passes required to allow transients to damp out.  Patience will be rewarded by a good simulation.

The red1 and red2 input pulses (if not cw) can be offset in time from the blue pulse which is centered at t=0.  The red1 wave is assumed to be reentrant after a pass of the cavity.  That is, the cavity is assumed to be aligned so the red1 beam, after traveling once around the cavity, is guaranteed to be centered on the incident red1 beam wave. Curved mirrors are also assumed to be centered on the red1 beam, as are both left and right grids.  This means that if the red1 wave offset or walk off is different from those of the red2 or blue waves, the red2 or blue beam will not generally be centered on the mirror axis nor will they be reentrant. I suggest you run your case with deff set to zero to check the beam walk offs and offsets if you are in doubt about them.

Outputs include beam tilts in the walkoff direction (Tilt-w), time dependent (for the pulsed case) M-squared values in the walkoff direction and perpendicular to it (M-w and M-p), and radius of curvature or wavefront curvature at the cavity mirrors (Focus-w and Focus-p). Negative values of curvature indicate a beam is diverging. You should make sure these results are converged by increasing the grid density by factors of two until the answers stabilize. Usually a grid of 32x32 or 64x64 is adequate.

The output fluences are written to ascii files FLU_NL.DAT (near field left), FLU_NR.DAT (near field right), FLU_FL.DAT (far field left), FLU_FR.DAT (far field right) with columns x position, y position, red1 fluence, red2 fluence, blue fluence.  Actual x and y far-field angles (in radians) are found by multiplying x-angle or y-angle by the wavelength (in meters) of the red1, red2, or blue wave.

The output powers are written to ascii files PWR_L.DAT and PWR_R.DAT with columns time, red1 power, red2 power, blue power.

The output spectra are written to ascii files SPEC_L.DAT and SPEC_R.DAT with columns frequency in MHz, normalized red1 spectral fluence, normalized red2, normalized blue.

Mx^2, My^2, X-curvature, Y-curvature, and X-tilt are written in file BEAM_LO.DAT and BEAM_RO.DAT with time in column 1.

Noncollinear phase matching in the critical plane can be faked by using the walkoff parameter.  For example, if the red1's birefringent walkoff angle is 50 mrad and you want to tilt an o-polarized blue beam to propagate along this direction, you would specify 50 mrad for both the red1 and blue beams. You must then compensate by adjusting the red2 walkoff by -50*lamdared2/lamdablue.  In other words, fake walkoff must be compensated to maintain phasematch, but real walkoff is not compensated.  Of course, the output tilts will not reflect the actual values for the fake walkoff but will be the deviations from the input beam tilts.

Last used input set is saved in mix.mat so if you would like to save those settings for later recall, copy mix.mat to another file name to store. Copy the file back to mix.mat to restore.

If you are running mlSNLO under MATLAB (not the standalone compiled version), this function can be called from a MATLAB script to automate parametric studies. See the 'SNLO' help tab for details.

2D-cav-LP examples: 29, 34, 37, 42, 45, 47, 49, 50, 54, 57, 73, 75. See file Examples with exercises and descriptions.pdf in mlSNLO folder, or on our website at as-photonics.com/examples

Detailed discussions of crystal nonlinear optics and SNLO examples are presented in the book "Crystal nonlinear optics: with SNLO examples," advertised on the SNLO download page or at as-photonics.com/book